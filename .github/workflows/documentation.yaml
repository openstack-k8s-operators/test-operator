name: Build documentation and deploy it to GitHub Pages
on:
  push:
    branches:
      - main
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  pages: write
  id-token: write

# Default to bash
defaults:
  run:
    shell: bash

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Check if there are changes in docs
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check-changes.outputs.has_changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check for changes in docs directory
        id: check-changes
        run: |
          if [[ -n $(git diff --name-only ${{ github.event.before }} ${{ github.sha }} docs/) ]]; then
            echo "::set-output name=has_changes::true"
          else
            echo "::set-output name=has_changes::false"
          fi

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: check-changes
    steps:
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: ./docs/requirements.txt
      - name: Build documentation
        if: needs.check-changes.outputs.has_changes == 'true'
        run: |
          docs/build-docs.sh
      - name: Upload artifacts
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/upload-pages-artifact@v1
        with:
          path: docs/build/html/
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: needs.check-changes.outputs.has_changes == 'false' && github.event_name != 'pull_request'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
